# Made with Remix IDE

"""
pragma solidity >=0.7.0 <0.9.0;

contract Storage {

    uint256[] numbers;
    struct S {uint a; uint b;}
    struct T {uint a; S s;}

    constructor (uint256[] memory _nums) {
        numbers = _nums;
    }

    function retrieve() public view returns (uint256[] memory){
        return numbers;
    }

    function parseT(T memory t) public pure returns (uint, uint, uint) {
        return (t.a, t.s.a, t.s.b);
    }
}
"""

STORAGE_ABI = [
    {
        "inputs": [{"internalType": "uint256[]", "name": "_nums", "type": "uint256[]"}],
        "stateMutability": "nonpayable",
        "type": "constructor",
    },
    {
        "inputs": [],
        "name": "retrieve",
        "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}],
        "stateMutability": "view",
        "type": "function",
    },
    {
        "inputs": [
            {
                "components": [
                    {"internalType": "uint256", "name": "a", "type": "uint256"},
                    {
                        "components": [
                            {"internalType": "uint256", "name": "a", "type": "uint256"},
                            {"internalType": "uint256", "name": "b", "type": "uint256"},
                        ],
                        "internalType": "struct Storage.S",
                        "name": "s",
                        "type": "tuple",
                    },
                ],
                "internalType": "struct Storage.T",
                "name": "t",
                "type": "tuple",
            }
        ],
        "name": "parseT",
        "outputs": [
            {"internalType": "uint256", "name": "", "type": "uint256"},
            {"internalType": "uint256", "name": "", "type": "uint256"},
            {"internalType": "uint256", "name": "", "type": "uint256"},
        ],
        "stateMutability": "pure",
        "type": "function",
    },
]
STORAGE_BYTECODE = "0x608060405234801561000f575f80fd5b5060405161067f38038061067f83398181016040528101906100319190610247565b805f908051906020019061004692919061004d565b505061028e565b828054828255905f5260205f20908101928215610087579160200282015b8281111561008657825182559160200191906001019061006b565b5b5090506100949190610098565b5090565b5b808211156100af575f815f905550600101610099565b5090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61010e826100c8565b810181811067ffffffffffffffff8211171561012d5761012c6100d8565b5b80604052505050565b5f61013f6100b3565b905061014b8282610105565b919050565b5f67ffffffffffffffff82111561016a576101696100d8565b5b602082029050602081019050919050565b5f80fd5b5f819050919050565b6101918161017f565b811461019b575f80fd5b50565b5f815190506101ac81610188565b92915050565b5f6101c46101bf84610150565b610136565b905080838252602082019050602084028301858111156101e7576101e661017b565b5b835b8181101561021057806101fc888261019e565b8452602084019350506020810190506101e9565b5050509392505050565b5f82601f83011261022e5761022d6100c4565b5b815161023e8482602086016101b2565b91505092915050565b5f6020828403121561025c5761025b6100bc565b5b5f82015167ffffffffffffffff811115610279576102786100c0565b5b6102858482850161021a565b91505092915050565b6103e48061029b5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80630aca78a8146100385780632e64cec11461006a575b5f80fd5b610052600480360381019061004d9190610268565b610088565b604051610061939291906102a2565b60405180910390f35b6100726100ad565b60405161007f919061038e565b60405180910390f35b5f805f835f015184602001515f01518560200151602001519250925092509193909250565b60605f8054806020026020016040519081016040528092919081815260200182805480156100f857602002820191905f5260205f20905b8154815260200190600101908083116100e4575b5050505050905090565b5f604051905090565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61015982610113565b810181811067ffffffffffffffff8211171561017857610177610123565b5b80604052505050565b5f61018a610102565b90506101968282610150565b919050565b5f819050919050565b6101ad8161019b565b81146101b7575f80fd5b50565b5f813590506101c8816101a4565b92915050565b5f604082840312156101e3576101e261010f565b5b6101ed6040610181565b90505f6101fc848285016101ba565b5f83015250602061020f848285016101ba565b60208301525092915050565b5f606082840312156102305761022f61010f565b5b61023a6040610181565b90505f610249848285016101ba565b5f83015250602061025c848285016101ce565b60208301525092915050565b5f6060828403121561027d5761027c61010b565b5b5f61028a8482850161021b565b91505092915050565b61029c8161019b565b82525050565b5f6060820190506102b55f830186610293565b6102c26020830185610293565b6102cf6040830184610293565b949350505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6103098161019b565b82525050565b5f61031a8383610300565b60208301905092915050565b5f602082019050919050565b5f61033c826102d7565b61034681856102e1565b9350610351836102f1565b805f5b83811015610381578151610368888261030f565b975061037383610326565b925050600181019050610354565b5085935050505092915050565b5f6020820190508181035f8301526103a68184610332565b90509291505056fea2646970667358221220d40a0e14d7f370dda379502e5cde13639a3ed587e0ab469b95bff1612929212764736f6c634300081a0033"
STORAGE_CONSTRUCTOR_CALL_INPUT = "0x608060405234801561000f575f80fd5b5060405161067f38038061067f83398181016040528101906100319190610247565b805f908051906020019061004692919061004d565b505061028e565b828054828255905f5260205f20908101928215610087579160200282015b8281111561008657825182559160200191906001019061006b565b5b5090506100949190610098565b5090565b5b808211156100af575f815f905550600101610099565b5090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61010e826100c8565b810181811067ffffffffffffffff8211171561012d5761012c6100d8565b5b80604052505050565b5f61013f6100b3565b905061014b8282610105565b919050565b5f67ffffffffffffffff82111561016a576101696100d8565b5b602082029050602081019050919050565b5f80fd5b5f819050919050565b6101918161017f565b811461019b575f80fd5b50565b5f815190506101ac81610188565b92915050565b5f6101c46101bf84610150565b610136565b905080838252602082019050602084028301858111156101e7576101e661017b565b5b835b8181101561021057806101fc888261019e565b8452602084019350506020810190506101e9565b5050509392505050565b5f82601f83011261022e5761022d6100c4565b5b815161023e8482602086016101b2565b91505092915050565b5f6020828403121561025c5761025b6100bc565b5b5f82015167ffffffffffffffff811115610279576102786100c0565b5b6102858482850161021a565b91505092915050565b6103e48061029b5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80630aca78a8146100385780632e64cec11461006a575b5f80fd5b610052600480360381019061004d9190610268565b610088565b604051610061939291906102a2565b60405180910390f35b6100726100ad565b60405161007f919061038e565b60405180910390f35b5f805f835f015184602001515f01518560200151602001519250925092509193909250565b60605f8054806020026020016040519081016040528092919081815260200182805480156100f857602002820191905f5260205f20905b8154815260200190600101908083116100e4575b5050505050905090565b5f604051905090565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61015982610113565b810181811067ffffffffffffffff8211171561017857610177610123565b5b80604052505050565b5f61018a610102565b90506101968282610150565b919050565b5f819050919050565b6101ad8161019b565b81146101b7575f80fd5b50565b5f813590506101c8816101a4565b92915050565b5f604082840312156101e3576101e261010f565b5b6101ed6040610181565b90505f6101fc848285016101ba565b5f83015250602061020f848285016101ba565b60208301525092915050565b5f606082840312156102305761022f61010f565b5b61023a6040610181565b90505f610249848285016101ba565b5f83015250602061025c848285016101ce565b60208301525092915050565b5f6060828403121561027d5761027c61010b565b5b5f61028a8482850161021b565b91505092915050565b61029c8161019b565b82525050565b5f6060820190506102b55f830186610293565b6102c26020830185610293565b6102cf6040830184610293565b949350505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6103098161019b565b82525050565b5f61031a8383610300565b60208301905092915050565b5f602082019050919050565b5f61033c826102d7565b61034681856102e1565b9350610351836102f1565b805f5b83811015610381578151610368888261030f565b975061037383610326565b925050600181019050610354565b5085935050505092915050565b5f6020820190508181035f8301526103a68184610332565b90509291505056fea2646970667358221220d40a0e14d7f370dda379502e5cde13639a3ed587e0ab469b95bff1612929212764736f6c634300081a003300000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003"
STORAGE_CONSTRUCTOR_CALL_ARGUMENT = [("uint256[]", "_nums", (1, 2, 3))]
STORAGE_FUNCTION_CALL_INPUT = "0x0aca78a8000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003"
STORAGE_FUNCTION_CALL_ARGUMENT = [("(uint256,(uint256,uint256))", "t", (1, (2, 3)))]
